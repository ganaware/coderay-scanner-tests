comment(// https://msdn.microsoft.com/en-us/library/vstudio/acdd6hb7.aspx)

keyword(class) class(Age)
operator({)
    keyword(readonly) predefined_type(int) ident(_year)operator(;)
    ident(Age)operator(()predefined_type(int) ident(year)operator(\))
    operator({)
        ident(_year) operator(=) ident(year)operator(;)
    operator(})
    directive(void) ident(ChangeYear)operator((\))
    operator({)
        comment(//_year = 1967; // Compile error if uncommented.)
    operator(})
operator(})

directive(public) keyword(readonly) predefined_type(int) ident(y) operator(=) integer(5)operator(;)

directive(public) directive(static) keyword(readonly) predefined_type(uint) ident(timeStamp) operator(=) operator(()predefined_type(uint)operator(\))ident(DateTime)operator(.)ident(Now)operator(.)ident(Ticks)operator(;)

directive(public) keyword(class) class(ReadOnlyTest)
operator({)
   keyword(class) class(SampleClass)
   operator({)
      directive(public) predefined_type(int) ident(x)operator(;)
      comment(// Initialize a readonly field )
      directive(public) keyword(readonly) predefined_type(int) ident(y) operator(=) integer(25)operator(;)
      directive(public) keyword(readonly) predefined_type(int) ident(z)operator(;)

      directive(public) ident(SampleClass)operator((\))
      operator({)
         comment(// Initialize a readonly instance field)
         ident(z) operator(=) integer(24)operator(;)
      operator(})

      directive(public) ident(SampleClass)operator(()predefined_type(int) ident(p1)operator(,) predefined_type(int) ident(p2)operator(,) predefined_type(int) ident(p3)operator(\))
      operator({)
         ident(x) operator(=) ident(p1)operator(;)
         ident(y) operator(=) ident(p2)operator(;)
         ident(z) operator(=) ident(p3)operator(;)
      operator(})
   operator(})

   directive(static) directive(void) ident(Main)operator((\))
   operator({)
      ident(SampleClass) ident(p1) operator(=) keyword(new) ident(SampleClass)operator(()integer(11)operator(,) integer(21)operator(,) integer(32)operator(\);)   comment(// OK)
      ident(Console)operator(.)ident(WriteLine)operator(()string<delimiter(")content(p1: x={0}, y={1}, z={2})delimiter(")>operator(,) ident(p1)operator(.)ident(x)operator(,) ident(p1)operator(.)ident(y)operator(,) ident(p1)operator(.)ident(z)operator(\);)
      ident(SampleClass) ident(p2) operator(=) keyword(new) ident(SampleClass)operator((\);)
      ident(p2)operator(.)ident(x) operator(=) integer(55)operator(;)   comment(// OK)
      ident(Console)operator(.)ident(WriteLine)operator(()string<delimiter(")content(p2: x={0}, y={1}, z={2})delimiter(")>operator(,) ident(p2)operator(.)ident(x)operator(,) ident(p2)operator(.)ident(y)operator(,) ident(p2)operator(.)ident(z)operator(\);)
   operator(})
operator(})
comment(/*
 Output:
    p1: x=11, y=21, z=32
    p2: x=55, y=25, z=24
*/)

comment(// https://msdn.microsoft.com/en-us/library/vstudio/a1khb4f8.aspx)

keyword(class) class(MyBaseClass)
operator({)
    comment(// virtual auto-implemented property. Overrides can only )
    comment(// provide specialized behavior if they implement get and set accessors. )
    directive(public) directive(virtual) predefined_type(string) ident(Name) operator({) keyword(get)operator(;) keyword(set)operator(;) operator(})

    comment(// ordinary virtual property with backing field )
    directive(private) predefined_type(int) ident(num)operator(;)
    directive(public) directive(virtual) predefined_type(int) ident(Number)
    operator({)
        keyword(get) operator({) keyword(return) ident(num)operator(;) operator(})
        keyword(set) operator({) ident(num) operator(=) keyword(value)operator(;) operator(})
    operator(})
operator(})


keyword(class) class(MyDerivedClass) operator(:) ident(MyBaseClass)
operator({)
    directive(private) predefined_type(string) ident(name)operator(;)

   comment(// Override auto-implemented property with ordinary property )
   comment(// to provide specialized accessor behavior. )
    directive(public) directive(override) predefined_type(string) ident(Name)
    operator({)
        keyword(get)
        operator({)
            keyword(return) ident(name)operator(;)
        operator(})
        keyword(set)
        operator({)
            keyword(if) operator(()keyword(value) operator(!=) ident(String)operator(.)ident(Empty)operator(\))
            operator({)
                ident(name) operator(=) keyword(value)operator(;)
            operator(})
            keyword(else)
            operator({)
                ident(name) operator(=) string<delimiter(")content(Unknown)delimiter(")>operator(;)
            operator(})
        operator(})
    operator(})

operator(})

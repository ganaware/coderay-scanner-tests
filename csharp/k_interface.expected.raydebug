comment(// https://msdn.microsoft.com/en-us/library/vstudio/87d83y5b.aspx)

keyword(interface) class(ISampleInterface)
operator({)
    directive(void) ident(SampleMethod)operator((\);)
operator(})

keyword(class) class(ImplementationClass) operator(:) ident(ISampleInterface)
operator({)
    comment(// Explicit interface member implementation:  )
    directive(void) ident(ISampleInterface)operator(.)ident(SampleMethod)operator((\))
    operator({)
        comment(// Method implementation.)
    operator(})

    directive(static) directive(void) ident(Main)operator((\))
    operator({)
        comment(// Declare an interface instance.)
        ident(ISampleInterface) ident(obj) operator(=) keyword(new) ident(ImplementationClass)operator((\);)

        comment(// Call the member.)
        ident(obj)operator(.)ident(SampleMethod)operator((\);)
    operator(})
operator(})

keyword(interface) class(IPoint)
operator({)
   comment(// Property signatures: )
   predefined_type(int) ident(x)
   operator({)
      keyword(get)operator(;)
      keyword(set)operator(;)
   operator(})

   predefined_type(int) ident(y)
   operator({)
      keyword(get)operator(;)
      keyword(set)operator(;)
   operator(})
operator(})

keyword(class) class(Point) operator(:) ident(IPoint)
operator({)
   comment(// Fields: )
   directive(private) predefined_type(int) ident(_x)operator(;)
   directive(private) predefined_type(int) ident(_y)operator(;)

   comment(// Constructor: )
   directive(public) ident(Point)operator(()predefined_type(int) ident(x)operator(,) predefined_type(int) ident(y)operator(\))
   operator({)
      ident(_x) operator(=) ident(x)operator(;)
      ident(_y) operator(=) ident(y)operator(;)
   operator(})

   comment(// Property implementation: )
   directive(public) predefined_type(int) ident(x)
   operator({)
      keyword(get)
      operator({)
         keyword(return) ident(_x)operator(;)
      operator(})

      keyword(set)
      operator({)
         ident(_x) operator(=) keyword(value)operator(;)
      operator(})
   operator(})

   directive(public) predefined_type(int) ident(y)
   operator({)
      keyword(get)
      operator({)
         keyword(return) ident(_y)operator(;)
      operator(})
      keyword(set)
      operator({)
         ident(_y) operator(=) keyword(value)operator(;)
      operator(})
   operator(})
operator(})

keyword(class) class(MainClass)
operator({)
   directive(static) directive(void) ident(PrintPoint)operator(()ident(IPoint) ident(p)operator(\))
   operator({)
      ident(Console)operator(.)ident(WriteLine)operator(()string<delimiter(")content(x={0}, y={1})delimiter(")>operator(,) ident(p)operator(.)ident(x)operator(,) ident(p)operator(.)ident(y)operator(\);)
   operator(})

   directive(static) directive(void) ident(Main)operator((\))
   operator({)
      ident(Point) ident(p) operator(=) keyword(new) ident(Point)operator(()integer(2)operator(,) integer(3)operator(\);)
      ident(Console)operator(.)ident(Write)operator(()string<delimiter(")content(My Point: )delimiter(")>operator(\);)
      ident(PrintPoint)operator(()ident(p)operator(\);)
   operator(})
operator(})
comment(// Output: My Point: x=2, y=3)

comment(// https://msdn.microsoft.com/en-us/library/vstudio/a569z7k8.aspx)

directive(unchecked)
operator({)
    ident(int1) operator(=) integer(2147483647) operator(+) integer(10)operator(;)
operator(})
ident(int1) operator(=) directive(unchecked)operator(()ident(ConstantMax) operator(+) integer(10)operator(\);)

keyword(class) class(UncheckedDemo)
operator({)
    directive(static) directive(void) ident(Main)operator(()predefined_type(string)operator([]) ident(args)operator(\))
    operator({)
        comment(// int.MaxValue is 2,147,483,647. )
        keyword(const) predefined_type(int) ident(ConstantMax) operator(=) predefined_type(int)operator(.)ident(MaxValue)operator(;)
        predefined_type(int) ident(int1)operator(;)
        predefined_type(int) ident(int2)operator(;)
        predefined_type(int) ident(variableMax) operator(=) integer(2147483647)operator(;)

        comment(// The following statements are checked by default at compile time. They do not )
        comment(// compile. )
        comment(//int1 = 2147483647 + 10; )
        comment(//int1 = ConstantMax + 10; )

        comment(// To enable the assignments to int1 to compile and run, place them inside  )
        comment(// an unchecked block or expression. The following statements compile and )
        comment(// run. )
        directive(unchecked)
        operator({)
            ident(int1) operator(=) integer(2147483647) operator(+) integer(10)operator(;)
        operator(})
        ident(int1) operator(=) directive(unchecked)operator(()ident(ConstantMax) operator(+) integer(10)operator(\);)

        comment(// The sum of 2,147,483,647 and 10 is displayed as -2,147,483,639.)
        ident(Console)operator(.)ident(WriteLine)operator(()ident(int1)operator(\);)


        comment(// The following statement is unchecked by default at compile time and run  )
        comment(// time because the expression contains the variable variableMax. It causes   )
        comment(// overflow but the overflow is not detected. The statement compiles and runs.)
        ident(int2) operator(=) ident(variableMax) operator(+) integer(10)operator(;)

        comment(// Again, the sum of 2,147,483,647 and 10 is displayed as -2,147,483,639.)
        ident(Console)operator(.)ident(WriteLine)operator(()ident(int2)operator(\);)

        comment(// To catch the overflow in the assignment to int2 at run time, put the )
        comment(// declaration in a checked block or expression. The following )
        comment(// statements compile but raise an overflow exception at run time. )
        directive(checked)
        operator({)
            comment(//int2 = variableMax + 10;)
        operator(})
        comment(//int2 = checked(variableMax + 10\); )

        comment(// Unchecked sections frequently are used to break out of a checked  )
        comment(// environment in order to improve performance in a portion of code  )
        comment(// that is not expected to raise overflow exceptions. )
        directive(checked)
        operator({) 
            comment(// Code that might cause overflow should be executed in a checked )
            comment(// environment. )
            directive(unchecked)
            operator({) 
                comment(// This section is appropriate for code that you are confident  )
                comment(// will not result in overflow, and for which performance is  )
                comment(// a priority.)
            operator(})
            comment(// Additional checked code here. )
        operator(})
    operator(})
operator(})
